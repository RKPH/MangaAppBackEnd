<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="IIS Express">MangaApp/MangaApp.csproj</projectFile>
    <projectFile profileName="http">MangaApp/MangaApp.csproj</projectFile>
    <projectFile profileName="https">MangaApp/MangaApp.csproj</projectFile>
    <projectFile pubXmlPath="MangaApp/Properties/PublishProfiles/hung11062003-001-site1 - FTP.pubxml">MangaApp/MangaApp.csproj</projectFile>
    <projectFile pubXmlPath="MangaApp/Properties/PublishProfiles/hung11062003-001-site1 - Web Deploy.pubxml">MangaApp/MangaApp.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fece7f8c-d6c4-4633-9d67-7af843061a08" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/MangaApp/Controllers/ImageController.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/MangaApp/DTO/UpdateFaceDto.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/MangaApp/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/MangaApp/Migrations/20240516030657_AddAUthenticationImage.Designer.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/MangaApp/Migrations/20240516030657_AddAUthenticationImage.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/Cloudinary.dll" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/CloudinaryDotNet.dll" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.sourcelink.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/Controllers/UsersController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/Controllers/UsersController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/MangaApp.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/MangaApp.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/Migrations/MangaAppDbcontextModelSnapshot.cs" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/Migrations/MangaAppDbcontextModelSnapshot.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/Model/Domain/User.cs" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/Model/Domain/User.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/Program.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/appsettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.deps.json" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.deps.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.dll" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.exe" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/MangaApp.pdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/bin/Debug/net8.0/appsettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.AssemblyInfo.cs" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.AssemblyInfo.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.AssemblyInfoInputs.cache" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.AssemblyInfoInputs.cache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.assets.cache" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.assets.cache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.csproj.AssemblyReference.cache" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.csproj.AssemblyReference.cache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.csproj.CoreCompileInputs.cache" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.csproj.CoreCompileInputs.cache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.csproj.FileListAbsolute.txt" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.csproj.FileListAbsolute.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.dll" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/MangaApp.pdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/apphost.exe" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/apphost.exe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/ref/MangaApp.dll" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/ref/MangaApp.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/refint/MangaApp.dll" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/Debug/net8.0/refint/MangaApp.dll" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/MangaApp.csproj.nuget.dgspec.json" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/MangaApp.csproj.nuget.dgspec.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/project.assets.json" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/project.assets.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/project.nuget.cache" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/project.nuget.cache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/project.packagespec.json" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/project.packagespec.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/rider.project.model.nuget.info" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/rider.project.model.nuget.info" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MangaApp/obj/rider.project.restore.info" beforeDir="false" afterPath="$PROJECT_DIR$/MangaApp/obj/rider.project.restore.info" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTTP Public Environment File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/MangaApp" />
    <option name="ROOT_SYNC" value="SYNC" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/de3edec1170e48a0a2478d8743508635c8e910/de/36e38555/Guid.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2fwCs4EeJazEIRyrlttnzZoW9ki" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.MangaApp: IIS Express.executor": "Run",
    ".NET Launch Settings Profile.MangaApp: http.executor": "Run",
    ".NET Launch Settings Profile.MangaApp: https.executor": "Run",
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Docker.MangaApp/Dockerfile.executor": "Run",
    "HTTP Request.MangaApp | #1.executor": "Run",
    "Publish to IIS.Publish MangaApp to IIS.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "vcs.Git",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "ChangesTree.GroupingKeys": [
      "directory",
      "repository"
    ],
    "rider.external.source.directories": [
      "C:\\Users\\pnghu\\AppData\\Roaming\\JetBrains\\Rider2023.3\\resharper-host\\DecompilerCache",
      "C:\\Users\\pnghu\\AppData\\Roaming\\JetBrains\\Rider2023.3\\resharper-host\\SourcesCache",
      "C:\\Users\\pnghu\\AppData\\Local\\Symbols\\src"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Docker.MangaApp/Dockerfile">
    <configuration name="MangaApp: hung11062003-001-site1 - FTP" type="DotNetMsBuildPublish" factoryName="Publish to IIS">
      <riderPublish configuration="Release" platform="Any CPU" publish_profile="hung11062003-001-site1 - FTP.pubxml" pubxml_path="$PROJECT_DIR$/MangaApp/Properties/PublishProfiles/hung11062003-001-site1 - FTP.pubxml" user_name="hung11062003-001" uuid_high="-3320815708700391370" uuid_low="-7491799678192294649" />
      <method v="2" />
    </configuration>
    <configuration name="MangaApp: hung11062003-001-site1 - Web Deploy" type="DotNetMsBuildPublish" factoryName="Publish to IIS">
      <riderPublish configuration="Release" platform="Any CPU" publish_profile="hung11062003-001-site1 - Web Deploy.pubxml" pubxml_path="$PROJECT_DIR$/MangaApp/Properties/PublishProfiles/hung11062003-001-site1 - Web Deploy.pubxml" user_name="hung11062003-001" uuid_high="-3320815708700391370" uuid_low="-7491799678192294649" />
      <method v="2" />
    </configuration>
    <configuration name="Publish MangaApp to IIS" type="DotNetMsBuildPublish" factoryName="Publish to IIS">
      <riderPublish configuration="Release" platform="Any CPU" publish_profile="&lt;no publish profile&gt;" uuid_high="-3320815708700391370" uuid_low="-7491799678192294649" />
      <method v="2" />
    </configuration>
    <configuration name="MangaApp | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/MangaApp/MangaApp.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="MangaApp: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/MangaApp/MangaApp.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="MangaApp: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/MangaApp/MangaApp.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="MangaApp: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/MangaApp/MangaApp.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="MangaApp/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="mangaapp" />
          <option name="containerName" value="mangaapp" />
          <option name="contextFolderPath" value="." />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="MangaApp/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue=".NET Launch Settings Profile.MangaApp: http" />
      <item itemvalue=".NET Launch Settings Profile.MangaApp: https" />
      <item itemvalue=".NET Launch Settings Profile.MangaApp: IIS Express" />
      <item itemvalue="Docker.MangaApp/Dockerfile" />
      <item itemvalue="HTTP Request.MangaApp | #1" />
      <item itemvalue="Publish to IIS.MangaApp: hung11062003-001-site1 - FTP" />
      <item itemvalue="Publish to IIS.MangaApp: hung11062003-001-site1 - Web Deploy" />
      <item itemvalue="Publish to IIS.Publish MangaApp to IIS" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.MangaApp | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fece7f8c-d6c4-4633-9d67-7af843061a08" name="Changes" comment="" />
      <created>1714702958260</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714702958260</updated>
      <workItem from="1714702959332" duration="27792000" />
      <workItem from="1714783647001" duration="958000" />
      <workItem from="1714787300714" duration="4013000" />
      <workItem from="1714814246853" duration="28190000" />
      <workItem from="1714958056217" duration="662000" />
      <workItem from="1714994608793" duration="3057000" />
      <workItem from="1715071691956" duration="4113000" />
      <workItem from="1715149204798" duration="16086000" />
      <workItem from="1715216796963" duration="2165000" />
      <workItem from="1715249368256" duration="1679000" />
      <workItem from="1715424697317" duration="13742000" />
      <workItem from="1715620941459" duration="4248000" />
      <workItem from="1715655146565" duration="4491000" />
      <workItem from="1715661843608" duration="76000" />
      <workItem from="1715662603720" duration="53000" />
      <workItem from="1715671556754" duration="14590000" />
      <workItem from="1715760450218" duration="2758000" />
      <workItem from="1715827278174" duration="12974000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="RECENT_FILTERS">
      <map>
        <entry key="User">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="*" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="user">
                    <value>
                      <list>
                        <option value="*" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
</project>